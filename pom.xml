<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>

	<groupId>cool.arch.whaleunit</groupId>
	<artifactId>whaleunit</artifactId>
	<version>1.0-SNAPSHOT</version>

	<packaging>pom</packaging>

	<name>WhaleUnit</name>

	<description>Docker support for JUnit based integration testing</description>

	<organization>
		<name>CoolArch</name>
		<url>http://www.arch.cool</url>
	</organization>

	<inceptionYear>2015</inceptionYear>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/coolarch/whaleunit/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Apache 2</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<developers>

		<developer>
			<id>matthewwerny</id>
			<name>Matthew Werny</name>
			<organization>CoolArch</organization>
			<organizationUrl>http://www.arch.cool/</organizationUrl>
			<timezone>-7</timezone>
			<email>matthewwerny+coolarch@gmail.com</email>
			<roles>
				<role>Project Lead</role>
			</roles>
		</developer>

	</developers>

	<ciManagement>
		<system>Jenkins</system>
		<url>TBD</url>
	</ciManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>
		<lib.junit.version>4.12</lib.junit.version>
		<lib.testng.version>6.8.21</lib.testng.version>
		
		<lib.mockito.version>1.10.19</lib.mockito.version>
		<lib.docker-client.version>2.7.7-SNAPSHOT</lib.docker-client.version>
		<lib.hk2.version>2.4.0-b10</lib.hk2.version>
		<lib.slf4j.version>1.7.10</lib.slf4j.version>
		<lib.logback.version>1.1.2</lib.logback.version>
		
		<plugin.lint.version>0.0.8</plugin.lint.version>
		<plugin.license.version>1.8</plugin.license.version>
	</properties>

	<modules>
		<module>whaleunit-runtime</module>
		<module>whaleunit-api</module>
		<module>whaleunit-annotation</module>
		<module>whaleunit-support</module>
		<module>whaleunit-junit</module>
		<module>whaleunit-testng</module>
		<module>whaleunit-license</module>
		<module>whaleunit-descriptor-loader-annotation</module>
		<module>whaleunit-descriptor-loader-fig</module>
	</modules>

	<build>

		<plugins>

			<plugin>
				<groupId>com.lewisd</groupId>
				<artifactId>lint-maven-plugin</artifactId>
			</plugin>

		</plugins>

		<pluginManagement>

			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<source>${java.source.version}</source>
						<target>${java.target.version}</target>
					</configuration>
				</plugin>
				
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<systemProperties>
							<property>
								<name>java.util.logging.config.file</name>
								<value>src/test/resources/logging.properties</value>
							</property>
						</systemProperties>
					</configuration>
				</plugin>
				
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${plugin.license.version}</version>
					<configuration>
						<licenseName>apache2</licenseName>
						<licenseResolver>classpath://license/resolver</licenseResolver>
						<includes>
							<include>**/*.java</include>
						</includes>
						<roots>
							<root>src/main/java</root>
							<root>src/test/java</root>
							<root>src/main/resources</root>
							<root>src/test/resources</root>
						</roots>
						<failOnMissingHeader>true</failOnMissingHeader>
					</configuration>
					<executions>
						<execution>
							<id>license-maven-plugin-check-file-header</id>
							<goals>
								<goal>check-file-header</goal>
							</goals>
							<phase>verify</phase>
						</execution>
					</executions>

					<dependencies>
						<dependency>
							<groupId>cool.arch.whaleunit</groupId>
							<artifactId>whaleunit-license</artifactId>
							<version>${project.version}</version>
						</dependency>
					</dependencies>

				</plugin>

				<plugin>
					<groupId>org.glassfish.hk2</groupId>
					<artifactId>hk2-inhabitant-generator</artifactId>
					<version>${lib.hk2.version}</version>
					<executions>
						<execution>
							<id>hk2-inhabitant-generator-generate</id>
							<goals>
								<goal>generate-inhabitants</goal>
							</goals>
							<phase>process-classes</phase>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>com.lewisd</groupId>
					<artifactId>lint-maven-plugin</artifactId>
					<version>${plugin.lint.version}</version>
					<executions>
						<execution>
							<id>lint-maven-plugin-validate-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<phase>validate</phase>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.glassfish.hk2</groupId>
										<artifactId>hk2-inhabitant-generator</artifactId>
										<versionRange>[2.4.0-b10,)</versionRange>
										<goals>
											<goal>generate-inhabitants</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.lewisd</groupId>
										<artifactId>lint-maven-plugin</artifactId>
										<versionRange>[0.0.8,)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.2,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>

		</pluginManagement>

	</build>

	<dependencyManagement>

		<dependencies>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-api</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-runtime</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-annotation</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-support</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-junit</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-testng</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-license</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-descriptor-loader-annotation</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-descriptor-loader-fig</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${lib.junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${lib.testng.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${lib.mockito.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.spotify</groupId>
				<artifactId>docker-client</artifactId>
				<version>${lib.docker-client.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${lib.slf4j.version}</version>
			</dependency>
			
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${lib.logback.version}</version>
			</dependency>
			
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${lib.logback.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2</artifactId>
				<version>${lib.hk2.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>javax.inject</artifactId>
						<groupId>javax.inject</groupId>
					</exclusion>
					<exclusion>
						<artifactId>javax.inject</artifactId>
						<groupId>org.glassfish.hk2.external</groupId>
					</exclusion>
				</exclusions>
			</dependency>

		</dependencies>

	</dependencyManagement>

</project>