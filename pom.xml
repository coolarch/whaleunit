<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>cool.arch.infrastructure</groupId>
		<artifactId>base-pom</artifactId>
		<version>1.0.0</version>
	</parent>
	<groupId>cool.arch.whaleunit</groupId>
	<artifactId>whaleunit</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>WhaleUnit</name>
	<description>Docker support for JUnit based integration testing</description>
	<organization>
		<name>CoolArch</name>
		<url>http://www.arch.cool</url>
	</organization>
	<inceptionYear>2015</inceptionYear>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/coolarch/whaleunit/issues</url>
	</issueManagement>
	<licenses>
		<license>
			<name>Apache 2</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>matthewwerny</id>
			<name>Matthew Werny</name>
			<organization>CoolArch</organization>
			<organizationUrl>http://www.arch.cool/</organizationUrl>
			<timezone>-7</timezone>
			<email>matthew.werny@arch.cool</email>
			<roles>
				<role>Project Lead</role>
			</roles>
		</developer>
	</developers>
	<ciManagement>
		<system>Jenkins</system>
		<url>TBD</url>
	</ciManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>
		
		<lib.stateroom.version>1.0.1</lib.stateroom.version>
		<lib.testng.version>6.8.21</lib.testng.version>
		<lib.docker-client.version>3.3.1</lib.docker-client.version>
		<lib.hk2.version>2.4.0-b10</lib.hk2.version>
		<lib.slf4j.version>1.7.10</lib.slf4j.version>
		<lib.logback.version>1.1.2</lib.logback.version>
		<skipITs>true</skipITs>
	</properties>
	<modules>
		<module>whaleunit-runtime</module>
		<module>whaleunit-api</module>
		<module>whaleunit-annotation</module>
		<module>whaleunit-support</module>
		<module>whaleunit-test-support</module>
		<module>whaleunit-junit</module>
		<module>whaleunit-testng</module>
		<module>whaleunit-descriptor-loader-annotation</module>
		<module>whaleunit-descriptor-loader-fig</module>
		<module>whaleunit-descriptor-loader-programmatic</module>
	</modules>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.glassfish.hk2</groupId>
					<artifactId>hk2-inhabitant-generator</artifactId>
					<version>${lib.hk2.version}</version>
					<executions>
						<execution>
							<id>hk2-inhabitant-generator-generate</id>
							<goals>
								<goal>generate-inhabitants</goal>
							</goals>
							<phase>process-classes</phase>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-api</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-runtime</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-annotation</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-support</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-test-support</artifactId>
				<version>1.0-SNAPSHOT</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-junit</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-testng</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-descriptor-loader-annotation</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-descriptor-loader-fig</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.whaleunit</groupId>
				<artifactId>whaleunit-descriptor-loader-programmatic</artifactId>
				<version>1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${lib.testng.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.spotify</groupId>
				<artifactId>docker-client</artifactId>
				<version>${lib.docker-client.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${lib.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${lib.logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${lib.logback.version}</version>
			</dependency>
			<dependency>
				<groupId>cool.arch.stateroom</groupId>
				<artifactId>stateroom</artifactId>
				<version>${lib.stateroom.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2</artifactId>
				<version>${lib.hk2.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>javax.inject</artifactId>
						<groupId>javax.inject</groupId>
					</exclusion>
					<exclusion>
						<artifactId>javax.inject</artifactId>
						<groupId>org.glassfish.hk2.external</groupId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>